package com.iotdatamp.mpbcclient.contract;

import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class DataStreamEntity extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_GETIOTDATAMARKETPLACECONTRACTADDRESS = "getIotDataMarketplaceContractAddress";

    public static final String FUNC_DISTRIBUTEFUNDS = "distributeFunds";

    public static final String FUNC_REGISTERNEWSENSOR = "registerNewSensor";

    public static final String FUNC_GETSENSORS = "getSensors";

    public static final String FUNC_ISAUTHENTICATED = "isAuthenticated";

    public static final String FUNC_DESCRIBEDATASTREAMENTITY = "describeDataStreamEntity";

    public static final String FUNC_GETDATASTREAMENTITYOWNERADDRESS = "getDataStreamEntityOwnerAddress";

    @Deprecated
    protected DataStreamEntity(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected DataStreamEntity(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected DataStreamEntity(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected DataStreamEntity(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<String> getIotDataMarketplaceContractAddress() {
        final Function function = new Function(FUNC_GETIOTDATAMARKETPLACECONTRACTADDRESS,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> distributeFunds(BigInteger weiValue) {
        final Function function = new Function(
                FUNC_DISTRIBUTEFUNDS,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> registerNewSensor(BigInteger _sensorType, String _latitude, String _longitude, BigInteger _pricePerDataUnit, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_REGISTERNEWSENSOR,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint8(_sensorType),
                        new Utf8String(_latitude),
                        new Utf8String(_longitude),
                        new org.web3j.abi.datatypes.generated.Uint256(_pricePerDataUnit)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<List> getSensors() {
        final Function function = new Function(FUNC_GETSENSORS,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {
                }));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Boolean> isAuthenticated() {
        final Function function = new Function(FUNC_ISAUTHENTICATED,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
                }));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Tuple6<String, String, String, String, String, List<String>>> describeDataStreamEntity() {
        final Function function = new Function(FUNC_DESCRIBEDATASTREAMENTITY,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
                }, new TypeReference<Address>() {
                }, new TypeReference<Utf8String>() {
                }, new TypeReference<Utf8String>() {
                }, new TypeReference<Utf8String>() {
                }, new TypeReference<DynamicArray<Address>>() {
                }));
        return new RemoteFunctionCall<Tuple6<String, String, String, String, String, List<String>>>(function,
                new Callable<Tuple6<String, String, String, String, String, List<String>>>() {
                    @Override
                    public Tuple6<String, String, String, String, String, List<String>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<String, String, String, String, String, List<String>>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                convertToNative((List<Address>) results.get(5).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<String> getDataStreamEntityOwnerAddress() {
        final Function function = new Function(FUNC_GETDATASTREAMENTITYOWNERADDRESS,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static DataStreamEntity load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new DataStreamEntity(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static DataStreamEntity load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new DataStreamEntity(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static DataStreamEntity load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new DataStreamEntity(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static DataStreamEntity load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new DataStreamEntity(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<DataStreamEntity> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _iotDataMarketplaceContractAddress, String _dataStreamEntityOwnerAddress, String _name, String _url, String _email) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Address(160, _iotDataMarketplaceContractAddress),
                new Address(160, _dataStreamEntityOwnerAddress),
                new Utf8String(_name),
                new Utf8String(_url),
                new Utf8String(_email)));
        return deployRemoteCall(DataStreamEntity.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<DataStreamEntity> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _iotDataMarketplaceContractAddress, String _dataStreamEntityOwnerAddress, String _name, String _url, String _email) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Address(160, _iotDataMarketplaceContractAddress),
                new Address(160, _dataStreamEntityOwnerAddress),
                new Utf8String(_name),
                new Utf8String(_url),
                new Utf8String(_email)));
        return deployRemoteCall(DataStreamEntity.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<DataStreamEntity> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _iotDataMarketplaceContractAddress, String _dataStreamEntityOwnerAddress, String _name, String _url, String _email) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Address(160, _iotDataMarketplaceContractAddress),
                new Address(160, _dataStreamEntityOwnerAddress),
                new Utf8String(_name),
                new Utf8String(_url),
                new Utf8String(_email)));
        return deployRemoteCall(DataStreamEntity.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<DataStreamEntity> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _iotDataMarketplaceContractAddress, String _dataStreamEntityOwnerAddress, String _name, String _url, String _email) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Address(160, _iotDataMarketplaceContractAddress),
                new Address(160, _dataStreamEntityOwnerAddress),
                new Utf8String(_name),
                new Utf8String(_url),
                new Utf8String(_email)));
        return deployRemoteCall(DataStreamEntity.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
